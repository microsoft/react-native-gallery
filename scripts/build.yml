parameters:
  - name: version
    type: string

steps:
  - task: CmdLine@2
    displayName: Upgrade App Version
    condition: ne(${{ parameters.version }}, 'current')
    inputs:
      script: node scripts/use-upgrade-version.js --upgradeVersion react-native-windows@${{ parameters.version }}

  - task: CmdLine@2
    displayName: Installing Yarn
    inputs:
      script: npm install -g yarn

  - task: NuGetCommand@2
    displayName: NuGet restore
    inputs:
      command: restore
      restoreSolution: windows/rngallery.sln
      verbosityRestore: Detailed

  - task: CmdLine@2
    displayName: midgard-yarn (faster yarn install)
    inputs:
      script: npx midgard-yarn@1.23.14 --pure-lockfile

  - task: CmdLine@2
    displayName: Lint and Type Checks
    inputs:
      script: yarn tsc | yarn lint

  - task: DownloadSecureFile@1
    name: signingCert
    displayName: 'Download CA certificate'
    inputs:
      secureFile: 'rngallery_Key.pfx'

  - task: CopyFiles@2
    displayName: 'Copy Certificate to Windows Build Directory'
    inputs:
      SourceFolder: '$(signingCert.secureFilePath)'
      Contents: 'rngallery_Key.pfx'
      TargetFolder: '.\windows\rngallery\'

  - task: CmdLine@2
    displayName: Build project (Release)
    timeoutInMinutes: 60
    inputs:
      script: npx --no-install react-native run-windows --arch x64 --no-deploy --logging --buildLogDirectory $BuildLogDirectory\Release --msbuildprops PackageCertificateKeyFile=$(signingCert.secureFilePath) --release

  - task: CmdLine@2
    displayName: Remove the Pfx
    inputs:
      script: del /f .\windows\rngallery\rngallery_Key.pfx

  - task: PublishBuildArtifacts@1
    displayName: Upload App
    condition: and(succeededOrFailed(), eq(${{ parameters.version }}, "current"))
    inputs:
      pathtoPublish: .\windows\AppPackages\rngallery
      artifactName: 'React Native Gallery - $(Agent.JobName)-$(System.JobAttempt)'
