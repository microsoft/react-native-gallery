# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- main

pr:
  - main
  - "v*"

variables:
  BuildLogDirectory: $(Build.BinariesDirectory)\x64\BuildLogs
  # AgentPool.Medium: rnw-pool-4
  # AgentPool.Large: windevbuildagents

pool: windevbuildagents

steps:
- checkout: self
  clean: false

- task: NuGetToolInstaller@0
  inputs:
    versionSpec: ">=5.8.0"

- task: NodeTool@0
  displayName: Installing Node
  inputs:
    versionSpec: '14.x'

- task: CmdLine@2
  displayName: Installing Yarm
  inputs:
    script: npm install -g yarn

- task: NuGetCommand@2
  displayName: NuGet restore
  inputs:
    command: restore
    restoreSolution: windows/rngallery.sln
    verbosityRestore: Detailed

- task: CmdLine@2
  displayName: midgard-yarn (faster yarn install)
  inputs:
    script: npx midgard-yarn@1.23.14 --pure-lockfile

- task: CmdLine@2
  displayName: Lint and Type Checks
  inputs:
    script: yarn tsc | yarn lint

- task: CmdLine@2
  displayName: Build project (Release)
  timeoutInMinutes: 60
  inputs:
    script: npx --no-install react-native run-windows --arch x64 --no-deploy --logging --buildLogDirectory $BuildLogDirectory\Release --release

- task: CmdLine@2
  displayName: Build project (Debug)
  timeoutInMinutes: 60
  inputs:
    script: npx react-native run-windows --arch x64 --no-deploy --logging --buildLogDirectory $BuildLogDirectory\Debug

- task: PublishBuildArtifacts@1
  displayName: Upload build logs
  condition:  succeededOrFailed()
  inputs:
    pathtoPublish: $BuildLogDirectory
    artifactName: 'Build logs - $(Agent.JobName)-$(System.JobAttempt)'
