schedules:
  - cron: '0 0 * * *'
    displayName: Nightly Build
    branches:
      include:
        - main
    batch: true

strategy:
  matrix:
    canary:
      BUILD_CANARY: true
      PUBLISH_APP: false
    publish:
      BUILD_CANARY: false
      PUBLISH_APP: true

variables:
  - group: rngallery_Variables
  - name: BuildLogDirectory
    value: $(Build.BinariesDirectory)\x64\BuildLogs

pool: rnw-pool-4

steps:
  - checkout: self
    clean: false

  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: '>=5.8.0'

  - task: NodeTool@0
    displayName: Installing Node
    inputs:
      versionSpec: '14.x'

  - task: CmdLine@2
    displayName: Use react-native-windows@canary
    condition: eq(variables['BUILD_CANARY'], 'true')
    inputs:
      script: node scripts/use-canary-version.js

  - task: CmdLine@2
    displayName: Installing Yarn
    inputs:
      script: npm install -g yarn

  - task: NuGetCommand@2
    displayName: NuGet restore
    inputs:
      command: restore
      restoreSolution: windows/rngallery.sln
      verbosityRestore: Detailed

  - task: CmdLine@2
    displayName: midgard-yarn (faster yarn install)
    inputs:
      script: npx midgard-yarn@1.23.14 --pure-lockfile

  - task: CmdLine@2
    displayName: Lint and Type Checks
    inputs:
      script: yarn tsc | yarn lint

  - task: DownloadSecureFile@1
    name: signingCert
    displayName: 'Download CA certificate'
    inputs:
      secureFile: 'rngallery_Key.pfx'

  - task: CopyFiles@2
    displayName: 'Copy Certificate to Windows Build Directory'
    inputs:
      SourceFolder: '$(signingCert.secureFilePath)'
      Contents: 'rngallery_Key.pfx'
      TargetFolder: '.\windows\rngallery\'

  - task: CmdLine@2
    displayName: Build project (Release)
    timeoutInMinutes: 60
    inputs:
      script: npx --no-install react-native run-windows --arch x64 --no-deploy --logging --buildLogDirectory $BuildLogDirectory\Release --msbuildprops PackageCertificateKeyFile=$(signingCert.secureFilePath) --release

  - task: CmdLine@2
    displayName: Remove the Pfx
    inputs:
      script: del /f .\windows\rngallery\rngallery_Key.pfx

  - task: PublishBuildArtifacts@1
    displayName: Upload App
    condition: and(succeededOrFailed(), eq(variables['PUBLISH_APP'], 'true'))
    inputs:
      pathtoPublish: .\windows\AppPackages\rngallery
      artifactName: 'React Native Gallery - $(Agent.JobName)-$(System.JobAttempt)'
